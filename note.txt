NPM doesn't stand for Node Package Manager.
It is a Package Mangaer but it doesn't stand for Node Package Manager.
Sometimes packages are also called dependencies

terminal command to configure NPM: 

    npm init -y // but this skips a lot of thing 

    npm init

    This will ask a few things like package name, version, entry point, test command,...
    in test command coloumn write jest

This will create a new file package.json with every details entered by us written in it.
This package.json file is configuration for our npm.

Now we have configured npm into our project now we can get packages/dependencies into our project.

The most imp package in our project is a bundler -> It bundles our app it packages our app properly so that it can be shipped together

We are going to use parcel for our app

    npm install -D parcel  //There are 2 types of dependencies (dev dependencies & normal dependencies) //tilde(~) vs caret(^)

Transitive dependencies -> parcel itself uses other dependencies and those also uses other dependencies that is why there are a lot of files in node modules folder.

Node modules is the collection of dependencies.

We don't need to push the node_modules folder on git instead just push package.json & package-lock.json
Cause these two files contain the version of each dependencies so we can reinstall the dependecies.
Any code that is automatically generated (dist, .parcel-cache, etc) we dont need to put that on github

You can try it like remove the node_modules folder and then again hit npm install in terminal node_modules will automatically get downloaded again.


last time we used cdn to fetch the react package but that is not a good practice instead we will install react package on our local machine

    npm install react
    npm install react-dom / npm i react-dom

now we have to import these to our javascript file by writing import React from "react";
If we run our app after this it will throw an error sice import isn't even in the syntax of normal
javascript that is why we need to specify module type in script tag to make this work.

# Parcel -
    - Dev build
    - Local server
    - HMR : Hot Module Replacement
    - File Watching Algorithm - written in c++
    - Faster build using Caching (That is was it is taking so less time , to se the effect delete the 
      .parcel-cache file and then again do npx parcel index.html now it will take more time)
    - Image optimization
    - Minification
    - Bundling
    - Compressing
    - Consistent Hashing
    - Code Splitting
    - Differential Bundling - suuport old browsers
    - Diagnostic
    - Error Handling
    - host on HTTPs
    - Tree Shaking - remove unused code
    - Different dev and prod bundles (remove   "main": "App.js", form package.json becuase when using 
      npx parcel build index.html it will conflict with ...)


How to tell which browser to support 

add 
  "browserslist": [
    "last 2 Chrome version",
    "last 2 Firefox version"
  ]
to package.json file

"last 2 versions" for last 2 version of any browser

read documentation on browserslist.dev

It ensures it will definately work on the specified browsers 


This was all going behind create react app

  "scripts": {
    "start": "parcel index.html",
    "build": "parcel build index.html",
    "test": "jest"
  },

Now we dont need to write npm parcel index.html everytime instead just write npm run start (or just npm start)
and for production app write npm run build (it wo't work for "npm build" in this case we have to include run)